# -*- coding: utf-8 -*-
# Django settings for Ruuhqa project.

import os
# Shortcuts to some common directories
ROOT_DIR = os.path.normpath(os.path.dirname(__file__))
PARENT_DIR = os.path.normpath(os.path.join(ROOT_DIR, ".."))

# Directories for applications (static original data files etc.)
DATA_DIR = os.path.normpath(os.path.join(PARENT_DIR, "data"))
# FIXME: most of these dirs should be in local_settings.py
TRACKLOG_DIR = os.path.normpath(os.path.join(DATA_DIR, "track"))
CONTENT_DIR = os.path.normpath(os.path.join(DATA_DIR, "content"))
PYS60CLIENT_DIR = os.path.normpath(os.path.join(DATA_DIR, "pys60client"))

# Directories for variable data (logs, preview files etc.)
VAR_DIR = os.path.normpath(os.path.join(PARENT_DIR, "var"))
LOG_DIR = os.path.normpath(os.path.join(VAR_DIR, "log"))
CACHE_DIR = os.path.normpath(os.path.join(VAR_DIR, "cache"))
PREVIEW_DIR = os.path.normpath(os.path.join(VAR_DIR, "preview"))

for DIR in [DATA_DIR, CONTENT_DIR, TRACKLOG_DIR, PYS60CLIENT_DIR,
            VAR_DIR, LOG_DIR, CACHE_DIR]:
    if os.path.isdir(DIR) is False:
        os.mkdir(DIR)

# These can be overridden in local_settings.py
DEBUG = False
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS

# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.

LOG_FILE = os.path.normpath(os.path.join(LOG_DIR, "django.log"))
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '[%(asctime)s] %(levelname)-8s"%(message)s"'
        },
    },
    'handlers': {
        'file': {
            'level':'DEBUG',
            'class':'logging.handlers.TimedRotatingFileHandler',
            'filename': LOG_FILE,
            'formatter': 'simple',
            'delay': False,
            'when': 'midnight',
        },
        #'null': {
        #    'level':'DEBUG',
        #    'class':'django.utils.log.NullHandler',
        #},
        #'console':{
        #    'level':'DEBUG',
        #    'class':'logging.StreamHandler',
        #    'formatter': 'simple'
        #},
        #'mail_admins': {
        #    'level': 'ERROR',
        #    'class': 'django.utils.log.AdminEmailHandler',
        #    'filters': ['special']
        #}
    },
    'loggers': {
        'django': {
            #'handlers':['null'],
            'handlers':['file'],
            'propagate': True,
#            'level':'INFO',
        },
        'django.request': {
            'handlers': ['file'],
            #'level': 'ERROR',
            'level': 'DEBUG',
            'propagate': False,
        },
    }
}

# This is defined in local_settings.py
#DATABASES = {
#    'default': {
#        #'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
#        'ENGINE': 'django.contrib.gis.db.backends.postgis', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
#        'NAME': 'ruuhqa',                      # Or path to database file if using sqlite3.
#        'USER': '',                      # Not used with sqlite3.
#        'PASSWORD': '',                  # Not used with sqlite3.
#        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
#        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
#    },
#}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'Europe/Helsinki'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Absolute path to the directory that holds media.
# Example: "/home/media/media.lawrence.com/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash if there is a path component (optional in other cases).
# Examples: "http://media.lawrence.com", "http://example.com/media/"
MEDIA_URL = ''

# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = '/media/'

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'w*4=lbg^-c1mt!k(_y^r_vc5h4v5wfklifnb#2@@605ng@&fov'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

TEMPLATE_CONTEXT_PROCESSORS = (
    "django.contrib.auth.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
#    "django.core.context_processors.static",
    "django.contrib.messages.context_processors.messages"
)


MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware', # For i18n
)

ROOT_URLCONF = 'urls'

TEMPLATE_DIRS = (
    os.path.join(ROOT_DIR, 'templates').replace('\\','/'),
)

# Put only django apps here
INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    # Uncomment the next line to enable the admin:
    'django.contrib.admin',
    # Uncomment the next line to enable admin documentation:
    'django.contrib.admindocs',
    'django.contrib.gis', # Enables e.g. GeoModelAdmin
    'django.contrib.humanize',
)

# Put your custom apps you want to use here
CUSTOM_APPS = (
    'apijson',
    'demo1',
    'track',
    'place',
    'location',
    'pys60client',
    'content',
    'calhistory',
    #'geonames',
    'hsl',
    #'jsf',
)
INSTALLED_APPS += CUSTOM_APPS

# TODO: put general static files in /static/{js,css,images}
# TODO: put application specific static files in /static/appname/{js,css,images,etc}
#STATIC_DOC_ROOT = os.path.join(ROOT_DIR, 'demo1', 'static').replace('\\','/')

STATIC_DOC_ROOT = os.path.join(ROOT_DIR, 'static').replace('\\','/')

LOGIN_REDIRECT_URL = '/'

### Server/developer workstation specific settings ###
try:
    from local_settings import *
except ImportError:
    print """
    -------------------------------------------------------------------------
    You need to create a local_settings.py file which needs to contain at least
    database connection information.

    Copy local_settings_example.py to local_settings.py and edit it.
    -------------------------------------------------------------------------
    """
    import sys
    sys.exit(1)
